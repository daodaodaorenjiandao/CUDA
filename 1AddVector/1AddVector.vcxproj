<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{9A2DF679-AC48-3A43-95CE-FB8C9B42543F}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>1AddVector</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">1AddVector.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">1AddVector</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">1AddVector.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">1AddVector</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Projects\CUDA\1AddVector\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">1AddVector.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">1AddVector</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Projects\CUDA\1AddVector\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">1AddVector.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">1AddVector</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\Win32\cudart_static.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Projects/CUDA/1AddVector/Debug/1AddVector.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Projects/CUDA/1AddVector/Debug/1AddVector.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\Win32\cudart_static.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Projects/CUDA/1AddVector/Release/1AddVector.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Projects/CUDA/1AddVector/Release/1AddVector.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\Win32\cudart_static.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Projects/CUDA/1AddVector/MinSizeRel/1AddVector.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Projects/CUDA/1AddVector/MinSizeRel/1AddVector.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\Win32\cudart_static.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Projects/CUDA/1AddVector/RelWithDebInfo/1AddVector.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Projects/CUDA/1AddVector/RelWithDebInfo/1AddVector.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Projects\CUDA\1AddVector\main.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building NVCC (Device) object 1AddVector/CMakeFiles/1AddVector.dir/$(Configuration)/1AddVector_generated_main.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
cd D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj -D generated_cubin_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj.cubin.txt -P D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//1AddVector_generated_main.cu.obj.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Projects/CUDA/1AddVector/main.cu;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_types.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\ConcurrencySal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\assert.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cmath;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\crtdefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstdlib;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\eh.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\exception;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\initializer_list;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\limits.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\malloc.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\new;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\sal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stddef.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdio.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdlib.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\string.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\swprintf.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\use_ansi.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\vadefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\wtime.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xkeycheck.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtgmath.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtr1common;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\yvals.h;D:\Projects\CUDA\1AddVector\main.cu;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.cmake;D:\Projects\CUDA\1AddVector\main.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\$(Configuration)\1AddVector_generated_main.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building NVCC (Device) object 1AddVector/CMakeFiles/1AddVector.dir/$(Configuration)/1AddVector_generated_main.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
cd D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj -D generated_cubin_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj.cubin.txt -P D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//1AddVector_generated_main.cu.obj.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Projects/CUDA/1AddVector/main.cu;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_types.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\ConcurrencySal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\assert.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cmath;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\crtdefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstdlib;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\eh.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\exception;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\initializer_list;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\limits.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\malloc.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\new;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\sal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stddef.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdio.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdlib.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\string.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\swprintf.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\use_ansi.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\vadefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\wtime.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xkeycheck.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtgmath.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtr1common;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\yvals.h;D:\Projects\CUDA\1AddVector\main.cu;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.cmake;D:\Projects\CUDA\1AddVector\main.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\$(Configuration)\1AddVector_generated_main.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building NVCC (Device) object 1AddVector/CMakeFiles/1AddVector.dir/$(Configuration)/1AddVector_generated_main.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
cd D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj -D generated_cubin_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj.cubin.txt -P D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//1AddVector_generated_main.cu.obj.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Projects/CUDA/1AddVector/main.cu;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_types.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\ConcurrencySal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\assert.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cmath;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\crtdefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstdlib;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\eh.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\exception;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\initializer_list;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\limits.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\malloc.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\new;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\sal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stddef.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdio.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdlib.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\string.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\swprintf.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\use_ansi.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\vadefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\wtime.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xkeycheck.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtgmath.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtr1common;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\yvals.h;D:\Projects\CUDA\1AddVector\main.cu;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.cmake;D:\Projects\CUDA\1AddVector\main.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\$(Configuration)\1AddVector_generated_main.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building NVCC (Device) object 1AddVector/CMakeFiles/1AddVector.dir/$(Configuration)/1AddVector_generated_main.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
cd D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"d:\Program Files (x86)\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj -D generated_cubin_file:STRING=D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//$(Configuration)/1AddVector_generated_main.cu.obj.cubin.txt -P D:/Projects/CUDA/1AddVector/CMakeFiles/1AddVector.dir//1AddVector_generated_main.cu.obj.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Projects/CUDA/1AddVector/main.cu;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\cuda_texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\math_functions_dbl_ptx3.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_fetch_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_indirect_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include\vector_types.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\ConcurrencySal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\assert.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cmath;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\crtdefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\cstdlib;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\eh.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\exception;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\initializer_list;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\limits.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\malloc.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\new;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\sal.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stddef.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdio.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\stdlib.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\string.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\swprintf.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\time.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\use_ansi.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\vadefs.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\wtime.inl;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xkeycheck.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xstddef;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtgmath.h;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xtr1common;D:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\yvals.h;D:\Projects\CUDA\1AddVector\main.cu;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.cmake;D:\Projects\CUDA\1AddVector\main.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\$(Configuration)\1AddVector_generated_main.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Projects\CUDA\1AddVector\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule D:/Projects/CUDA/1AddVector/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"d:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/Projects/CUDA -BD:/Projects/CUDA --check-stamp-file D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Projects/CUDA/1AddVector/CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.depend;D:\Program Files (x86)\CMake\share\cmake-3.4\Modules\FindCUDA\run_nvcc.cmake;D:\Projects\CUDA\1AddVector\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule D:/Projects/CUDA/1AddVector/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"d:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/Projects/CUDA -BD:/Projects/CUDA --check-stamp-file D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Projects/CUDA/1AddVector/CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.depend;D:\Program Files (x86)\CMake\share\cmake-3.4\Modules\FindCUDA\run_nvcc.cmake;D:\Projects\CUDA\1AddVector\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule D:/Projects/CUDA/1AddVector/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"d:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/Projects/CUDA -BD:/Projects/CUDA --check-stamp-file D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Projects/CUDA/1AddVector/CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.depend;D:\Program Files (x86)\CMake\share\cmake-3.4\Modules\FindCUDA\run_nvcc.cmake;D:\Projects\CUDA\1AddVector\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule D:/Projects/CUDA/1AddVector/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"d:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/Projects/CUDA -BD:/Projects/CUDA --check-stamp-file D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Projects/CUDA/1AddVector/CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeLists.txt;D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\1AddVector_generated_main.cu.obj.depend;D:\Program Files (x86)\CMake\share\cmake-3.4\Modules\FindCUDA\run_nvcc.cmake;D:\Projects\CUDA\1AddVector\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Projects\CUDA\1AddVector\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <Object Include="D:\Projects\CUDA\1AddVector\CMakeFiles\1AddVector.dir\$(Configuration)\1AddVector_generated_main.cu.obj" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:/Projects/CUDA/ZERO_CHECK.vcxproj">
      <Project>905B2F0B-4661-33E1-9196-D0ED2FE9C468</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>